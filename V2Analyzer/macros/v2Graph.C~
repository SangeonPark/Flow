    double x[5];
    double v2_pos_case1[5];
    double v2_neg_case1[5];
    double v2_tot_case1[5];
    double v2_pos_case2[5];
    double v2_neg_case2[5];
    double v2_tot_case2[5];
    double numerator;
    double denominator;
    double q0,q1,q2,q3;
    for(Int_t i=0; i<5; i++){
	x[i]=ach_hist[i]->GetMean();
	//case1 positive
	q0 = c2_pos_case1[i][0][0]->GetMean();
	q1 = c2_pos_case1[i][1][0]->GetMean();
	q2 = c2_pos_case1[i][2][0]->GetMean();
	q3 = c2_pos_case1[i][3][0]->GetMean();
	numerator = q0;
	denominator = sqrt((q1*q2)/q3);
	v2_pos_case1[i] = numerator/denominator;
	//case1 total
	q0 = c2_tot_case1[i][0][0]->GetMean();
	q1 = c2_tot_case1[i][1][0]->GetMean();
	q2 = c2_tot_case1[i][2][0]->GetMean();
	q3 = c2_tot_case1[i][3][0]->GetMean();
	numerator = q0;
	denominator = sqrt((q1*q2)/q3);
	v2_tot_case1[i] = numerator/denominator;
	//case1 negative
	q0 = c2_neg_case1[i][0][0]->GetMean();
	q1 = c2_neg_case1[i][1][0]->GetMean();
	q2 = c2_neg_case1[i][2][0]->GetMean();
	q3 = c2_neg_case1[i][3][0]->GetMean();
	numerator = q0;
	denominator = sqrt((q1*q2)/q3);
	v2_neg_case1[i] = numerator/denominator;
	//case2 positive
	q0 = c2_pos_case2[i][0][0]->GetMean();
	q1 = c2_pos_case2[i][1][0]->GetMean();
	q2 = c2_pos_case2[i][2][0]->GetMean();
	q3 = c2_pos_case2[i][3][0]->GetMean();
	numerator = q0;
	denominator = sqrt((q1*q2)/q3);
	v2_pos_case2[i] = numerator/denominator;
	//case2 total
	q0 = c2_tot_case2[i][0][0]->GetMean();
	q1 = c2_tot_case2[i][1][0]->GetMean();
	q2 = c2_tot_case2[i][2][0]->GetMean();
	q3 = c2_tot_case2[i][3][0]->GetMean();
	numerator = q0;
	denominator = sqrt((q1*q2)/q3);
	v2_tot_case2[i] = numerator/denominator;
	//case2 negative
	q0 = c2_neg_case2[i][0][0]->GetMean();
	q1 = c2_neg_case2[i][1][0]->GetMean();
	q2 = c2_neg_case2[i][2][0]->GetMean();
	q3 = c2_neg_case2[i][3][0]->GetMean();
	numerator = q0;
	denominator = sqrt((q1*q2)/q3);
	v2_neg_case2[i] = numerator/denominator;
    }  
    gr_pos_case1 = fs->make<TGraph>(5,x,v2_pos_case1);
    gr_neg_case1 = fs->make<TGraph>(5,x,v2_neg_case1);
    gr_tot_case1 = fs->make<TGraph>(5,x,v2_tot_case1);
    gr_pos_case1 -> SetName("positive tracks case1");
    gr_neg_case1 -> SetName("negative tracks case1");
    gr_tot_case1 -> SetName("total tracks case1");
    gr_pos_case1 -> SetTitle("positive tracks case1");
    gr_neg_case1 -> SetTitle("negative tracks case1");
    gr_tot_case1 -> SetTitle("total tracks case1");
    gr_pos_case1->SetMarkerStyle(21);
    gr_neg_case1->SetMarkerStyle(21);
    gr_tot_case1->SetMarkerStyle(21);
    gr_pos_case2 = fs->make<TGraph>(5,x,v2_pos_case2);
    gr_neg_case2 = fs->make<TGraph>(5,x,v2_neg_case2);
    gr_tot_case2 = fs->make<TGraph>(5,x,v2_tot_case2);
    gr_pos_case2 -> SetName("positive tracks case2");
    gr_neg_case2 -> SetName("negative tracks case2");
    gr_tot_case2 -> SetName("total tracks case2");
    gr_pos_case2 -> SetTitle("positive tracks case2");
    gr_neg_case2 -> SetTitle("negative tracks case2");
    gr_tot_case2 -> SetTitle("total tracks case2");
    gr_pos_case2->SetMarkerStyle(21);
    gr_neg_case2->SetMarkerStyle(21);
    gr_tot_case2->SetMarkerStyle(21);
*/

    // v2graph->Add(gr_pos);
    //v2graph->Add(gr_neg);
    
}
